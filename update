#!/bin/bash
set -e

summary_details=""
changes_made=false

update_submodule() {
    local path=$1
    local type=$2
    local prefix=$3

    echo "--- Processing submodule: $path ---"
    cd "$path"

    local current_commit_short=$(git rev-parse --short HEAD)

    if [ "$type" == "branch" ]; then
        local branch=${prefix:-master}
        echo "Updating to latest from branch: $branch"
        git fetch origin "$branch"
        local latest_commit=$(git rev-parse "origin/$branch")
        local current_commit=$(git rev-parse HEAD)

        if [ "$current_commit" != "$latest_commit" ]; then
            echo "New commits found. Updating..."
            git checkout "$branch"
            git pull origin "$branch"
            local latest_commit_short=$(git rev-parse --short "origin/$branch")
            summary_details="$summary_details* **$path**: Updated from '$current_commit_short' to latest of '$branch' ('$latest_commit_short').\n"
            changes_made=true
        else
            echo "Already up-to-date."
        fi
    elif [ "$type" == "tag" ]; then
        echo "Updating to latest stable tag with prefix: '$prefix'"
        git fetch --tags origin
        
        local latest_tag=$(git tag -l "${prefix}*" | grep -E "^${prefix}[0-9]+(\.[0-9]+)*$" | sort -V | tail -n 1)

        if [ -z "$latest_tag" ]; then
            echo "No stable tags found for $path with prefix '$prefix'. Skipping."
            cd ..
            return
        fi
        
        local current_commit=$(git rev-parse HEAD)
        local latest_tag_commit=$(git rev-parse "$latest_tag^{commit}")

        if [ "$current_commit" != "$latest_tag_commit" ]; then
            local current_tag=$(git describe --tags --abbrev=0 HEAD)
            echo "Updating to tag $latest_tag..."
            git checkout "$latest_tag"
            summary_details="$summary_details* **$path**: Updated from '$current_tag' to tag '$latest_tag'.\n"
            changes_made=true
        else
            echo "Already on the latest stable tag."
        fi
    fi

    cd ..
}

update_submodule "x264" "branch"
update_submodule "x265_git" "branch"
update_submodule "FFmpeg" "tag" "n"
update_submodule "dav1d" "tag" ""
update_submodule "fdk-aac" "tag" "v"
update_submodule "aom" "tag" "v"
update_submodule "libvpx" "tag" "v"
update_submodule "opus" "tag" "v"
update_submodule "SVT-AV1" "tag" "v"

if [ "$changes_made" = true ]; then
    if [ -n "$GITHUB_OUTPUT" ]; then
        echo "changes=true" >> $GITHUB_OUTPUT
        {
            echo "pr_body<<EOF"
            echo -e "$summary_details"
            echo "EOF"
        } >> "$GITHUB_OUTPUT"
    else
        echo "Changes were made:"
        echo -e "$summary_details"
    fi
else
    if [ -n "$GITHUB_OUTPUT" ]; then
        echo "changes=false" >> $GITHUB_OUTPUT
    else
        echo "No changes were made."
    fi
fi